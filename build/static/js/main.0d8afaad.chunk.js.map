{"version":3,"sources":["components/Header/Header.jsx","js/ConnectionFactory.js","js/ShinobiDAO.js","js/ShinobiController.js","components/CharacterList/components/AddButton/AddButton.jsx","components/CharacterList/components/AddButton/index.js","components/CharacterList/components/CharacterCard/CharacterCard.jsx","components/CharacterList/components/CharacterCard/index.js","components/inputs/TextInput/TextInput.jsx","components/inputs/TextInput/index.js","components/inputs/Button/Button.jsx","components/inputs/Button/index.js","components/CharacterList/components/ModalAdd/ModalAdd.jsx","components/CharacterList/components/ModalAdd/index.js","components/CharacterList/CharacterList.jsx","components/CharacterList/index.js","components/Header/index.js","components/inputs/TextArea/TextArea.jsx","components/ShinobiProfile/components/SectionBox/SectionBox.jsx","components/ShinobiProfile/components/SectionBox/index.js","components/ShinobiProfile/components/General/General.jsx","components/ShinobiProfile/components/General/index.js","components/ShinobiProfile/components/Nav/Nav.jsx","components/ShinobiProfile/components/Nav/index.js","components/ShinobiProfile/ShinobiProfile.jsx","App.js","index.js"],"names":["Header","props","button","func","Function","activeReturn","action","className","onClick","title","ConnectionFactory","Promise","resolve","reject","request","window","indexedDB","open","onupgradeneeded","event","connection","target","result","objectStoreNames","contains","createObjectStore","keyPath","onsuccess","ShinobiDAO","db","this","name","shinobi","Shinobi","transaction","objectStore","add","oncomplete","onerror","id","get","Object","values","shinobiList","openCursor","cursor","push","value","continue","idx","delete","e","load","cla","position","bio","FOR","RES","AGL","DEX","PER","INT","CAR","FOC","_name","Date","now","_cla","_position","_bio","_FOR","_RES","_AGL","_DEX","_PER","_INT","_CAR","_FOC","_maxHP","undefined","_actHP","_maxCK","_actCK","_ckType","Math","round","shinobiController","create","then","dao","message","console","log","del","AddButton","CharacterCard","TextInput","htmlFor","type","onChange","text","Button","styleMode","style","preventDefault","stopPropagation","ModalAdd","useState","setText","close","addShinobi","CharacterList","list","setList","modalAdd","setModalAdd","handlerModalAdd","useEffect","res","JSON","stringify","map","classList","goToShinobiProfile","key","TextArea","placeholder","rows","SectionBox","children","General","setBio","defaultValue","cols","Nav","pages","page","setter","ShinobiProfile","setIdx","fullName","goToCharacterList","App","example","setShinobi","setPageIdx","bind","pageIdx","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d8afaad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n\r\n\tlet button = \"\";\r\n\r\n\tlet func = new Function();\r\n\r\n\tif (props.activeReturn) {\r\n\r\n\t\tfunc = props.action;\r\n\r\n\t\tbutton = (\r\n\t\t<div \r\n\t\t\tclassName=\"Header_return\" \r\n\t\t\tonClick={() => func()}\r\n\t\t>\r\n\t\t\t<i className=\"fas fa-arrow-left\"></i>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (props.action) func = props.action;\r\n\r\n\r\n\treturn (\r\n\t\t<section className=\"Header\">\r\n\t\t\t{button}\r\n\t\t\t<h2 className=\"Header_title\">{props.title}</h2>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","class ConnectionFactory {\r\n\r\n  static create() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const request = window.indexedDB.open(\"ShinobiWorld\", 2);\r\n\r\n      request.onupgradeneeded = event => {\r\n        let connection = event.target.result;\r\n\r\n        if (!connection.objectStoreNames.contains(\"shinobis\")) {\r\n          connection.createObjectStore(\"shinobis\", {keyPath: 'id'})\r\n        }\r\n      }\r\n\r\n      request.onsuccess = event => {\r\n        let connection = event.target.result;\r\n\r\n        resolve(connection);\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default ConnectionFactory;","const devMode = false;\r\n\r\nclass ShinobiDAO {\r\n  constructor(db) {\r\n    this.db = db;\r\n  }\r\n\r\n  static example() {\r\n    return new Shinobi(\"Tanzan\", \"Haruno\");\r\n  }\r\n\r\n  add(name) {\r\n\r\n    const shinobi = new Shinobi(name);\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db.transaction([\"shinobis\"], \"readwrite\");\r\n      \r\n      let shinobis = transaction.objectStore(\"shinobis\");\r\n\r\n      let request = shinobis.add(shinobi);\r\n\r\n      request.oncomplete = event => {\r\n        resolve(\"shinobi registrado com sucesso\");\r\n      }\r\n\r\n      request.onerror = event => {\r\n        reject(\"erro ao registrar o shinobi\");\r\n      }\r\n    })\r\n  }\r\n\r\n  get(id) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const transaction = this.db.transaction([\"shinobis\"], \"readwrite\");\r\n\r\n      const request = transaction.objectStore(\"shinobis\").get(id);\r\n\r\n      request.onsuccess = event => {\r\n        \r\n        resolve(new Shinobi(...(Object.values(request.result))));\r\n      }\r\n    })\r\n  }\r\n\r\n  load() {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      \r\n      const shinobiList = [];\r\n\r\n      const objectStore = this.db.transaction([\"shinobis\"], \"readonly\").objectStore(\"shinobis\");\r\n\r\n      const request = objectStore.openCursor();\r\n      \r\n      request.onsuccess = event => {\r\n        let cursor = event.target.result;\r\n\r\n        if (cursor) {\r\n          shinobiList.push(new Shinobi(...(Object.values(cursor.value))))\r\n          cursor.continue();\r\n        } else {\r\n          devMode && console.log(shinobiList)\r\n          resolve(shinobiList)\r\n        }\r\n      }\r\n\r\n      request.onerror = event => {\r\n        resolve(\"erro ao carregar dados\");\r\n      }\r\n    })\r\n  }\r\n\r\n  del(idx) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const transaction = this.db.transaction([\"shinobis\"], \"readwrite\");\r\n      \r\n      let shinobis = transaction.objectStore(\"shinobis\");\r\n\r\n      let request = shinobis.delete(idx);\r\n\r\n      request.onsuccess = e => {\r\n        resolve(this.load());\r\n      }\r\n\r\n      request.onerror = e => {\r\n        reject(\"Não foi possivel apagar o registro\");\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\nclass Shinobi {\r\n  constructor(name, id, cla, position, bio, FOR, RES, AGL, DEX, PER, INT, CAR, FOC) {\r\n    this._name = name || \" \";\r\n    this.id = id || Date.now();\r\n    this._cla = cla || \" \";\r\n    this._position = position || \" \";\r\n\r\n\r\n    this._bio = bio || \"\";\r\n\r\n    this._FOR = FOR || 5;\r\n    this._RES = RES || 5;\r\n    this._AGL = AGL || 5;\r\n    this._DEX = DEX || 5;\r\n    this._PER = PER || 5;\r\n    this._INT = INT || 5;\r\n    this._CAR = CAR || 5;\r\n    this._FOC = FOC || 5;\r\n\r\n    this._maxHP = undefined;\r\n    this._actHP = undefined;\r\n    this._maxCK = undefined;\r\n    this._actCK = undefined;\r\n\r\n    this._ckType = [];\r\n  }\r\n\r\n  get fullName() {\r\n    return `${this._name} ${this._cla}`;\r\n  }\r\n\r\n  get FOR() {\r\n    return this._FOR;\r\n  }\r\n\r\n  get RES() {\r\n    return this._RES;\r\n  }\r\n\r\n  get AGL() {\r\n    return this._AGL;\r\n  }\r\n\r\n  get PER() {\r\n    return this._PER;\r\n  }\r\n\r\n  get DEX() {\r\n    return this._DEX;\r\n  }\r\n\r\n  get INT() {\r\n    return this._INT;\r\n  }\r\n\r\n  get CAR() {\r\n    return this._CAR;\r\n  }\r\n\r\n  get FOC() {\r\n    return this._FOC;\r\n  }\r\n\r\n  get rank() {\r\n    return (\r\n      this.FOR +\r\n      this.RES +\r\n      this.AGL +\r\n      this.DEX +\r\n      this.INT +\r\n      this.PER +\r\n      this.CAR +\r\n      this.FOC\r\n    );\r\n  }\r\n\r\n  updateMaxHP() {\r\n    this._maxHP = Math.round(this.RES * 10 + this.FOR * 5);\r\n  }\r\n\r\n  updateMaxCK() {\r\n    this._maxCK = Math.round(this._INT * 5 + this.PER);\r\n  }\r\n}\r\n\r\nexport default ShinobiDAO;\r\n","import ConnectionFactory from \"./ConnectionFactory\";\r\nimport ShinobiDAO from \"./ShinobiDAO\";\r\n\r\nclass ShinobiController {\r\n\r\n\r\n  add(name) {\r\n    return ConnectionFactory\r\n      .create()\r\n      .then(connection => new ShinobiDAO(connection))\r\n      .then(dao => dao.add(name))\r\n      .then(message => console.log(message));\r\n  }\r\n\r\n  load() {\r\n    return ConnectionFactory\r\n      .create()\r\n      .then(connection => new ShinobiDAO(connection))\r\n      .then(dao => dao.load())\r\n\r\n  }\r\n\r\n  get(idx) {\r\n    return ConnectionFactory \r\n      .create()\r\n      .then(connection => new ShinobiDAO(connection))\r\n      .then(dao => dao.get(idx))\r\n  }\r\n\r\n  del(idx) {\r\n    return ConnectionFactory\r\n      .create()\r\n      .then(connection => new ShinobiDAO(connection))\r\n      .then(dao => dao.del(idx));\r\n  }\r\n}\r\n\r\nconst shinobiController = new ShinobiController();\r\n\r\nexport default shinobiController;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction AddButton(props) {\r\n\r\n  return (\r\n    <div\r\n      className=\"AddButton\"\r\n      onClick={() => {\r\n        props.action();\r\n      }}\r\n    >\r\n      +\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import AddButton from \"./AddButton\";\r\nexport default AddButton;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction CharacterCard(props) {\r\n\r\n  const shinobi = props.shinobi;\r\n  \r\n  return (\r\n    <article className=\"CharacterCard\">\r\n      <div>\r\n        <h3 className=\"CharacterCard_name\">{shinobi._name}</h3>\r\n        <p className=\"CharacterCard_summary\">{shinobi._bio}</p>\r\n      </div>\r\n      <i className=\"fas fa-trash\"></i>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;","import CharacterCard from \"./CharacterCard\";\r\nexport default CharacterCard;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction TextInput(props) {\r\n\r\n\treturn (\r\n\t\t<div className=\"TextInput\">\r\n\t\t\t<label htmlFor=\"ipt-name\">{props.title}</label>\r\n\t\t\t<input id=\"ipt-name\" type=\"text\" onChange={(event) => {\r\n\t\t\t\tprops.text(event.target.value)\r\n\t\t\t}}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TextInput;","import TextInput from \"./TextInput\";\r\nexport default TextInput;","import React from \"react\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction Button(props) {\r\n\r\n    let styleMode = !props.style ? \"light\" : \"dark\"\r\n    let action = !props.action ? (() => { }) : props.action;\r\n\r\n    return (\r\n        <button\r\n            className={\"Button \" + styleMode}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                action();\r\n            }}\r\n        >{props.title}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","import Button from \"./Button\";\r\nexport default Button;","import React, {useState} from \"react\";\r\nimport TextInput from \"../../../inputs/TextInput\";\r\nimport Button from \"../../../inputs/Button\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction ModalAdd(props) {\r\n\r\n\tlet action = !props.action ? (() => { }) : props.action;\r\n\r\n\tconst [text, setText] = useState(\"\");\r\n\r\n\tfunction handlerAddShinobi() {\r\n\t\tprops.addShinobi(text);\r\n\t\tprops.close();\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<section className=\"ModalAdd\" onClick={(e) => {\r\n\t\t\tif (e.target.className == \"ModalAdd\") props.close();\r\n\t\t}}>\r\n\t\t\t<form className=\"ModalAdd_modal\">\r\n\t\t\t\t<TextInput title=\"Primeiro Nome\" text={setText} />\r\n\t\t\t\t<Button title=\"Criar\" style=\"dark\" action={handlerAddShinobi} />\r\n\t\t\t</form>\r\n\t\t</section>\r\n\r\n\t);\r\n}\r\n\r\nexport default ModalAdd;","import ModalAdd from \"./ModalAdd\";\r\nexport default ModalAdd;","import React, {useState, useEffect} from \"react\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport shinobiController from \"./../../js/ShinobiController\";\r\nimport AddButton from \"./components/AddButton/\";\r\nimport CharacterCard from \"./components/CharacterCard/\";\r\nimport ModalAdd from \"./components/ModalAdd\";\r\n\r\nfunction CharacterList(props) {\r\n\r\n  const [list, setList] = useState([]);\r\n\r\n  const [modalAdd, setModalAdd] = useState(false);\r\n\r\n  useEffect(() => {\r\n    shinobiController\r\n    .load()\r\n    .then(res => {\r\n      if (JSON.stringify(list) !== JSON.stringify(res)) setList(res);\r\n    });\r\n  })\r\n\r\n  function handlerModalAdd() {\r\n    setModalAdd(!modalAdd);\r\n  }\r\n    \r\n  return (\r\n    <div className=\"CharacterList\">\r\n      <Header title=\"Personagens\"/>\r\n\r\n      <ul className=\"CharacterList_list\">\r\n        {list.map((shinobi, id) => {\r\n          return (\r\n            <li onClick={(e) => {\r\n              if (!e.target.classList.contains(\"fas\")) {\r\n\r\n                props.goToShinobiProfile(shinobi.id);\r\n              } else {\r\n\r\n                shinobiController.del(shinobi.id)\r\n                  .then(res => setList(res));\r\n              }\r\n              \r\n            }} key={id}>\r\n              <CharacterCard shinobi={shinobi}/>\r\n            </li>\r\n          );\r\n        })}\r\n        {modalAdd && <ModalAdd addShinobi={props.addShinobi} close={handlerModalAdd}/>}\r\n      </ul>\r\n\r\n      <AddButton action={handlerModalAdd}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterList;\r\n","import CharacterList from \"./CharacterList\";\r\nexport default CharacterList;","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction TextArea(props) {\r\n\r\n    return (\r\n        <div className=\"TextArea\">\r\n          <label htmlFor={props.id}>{props.title}</label>\r\n          <textarea id={props.id} type=\"text\" placeholder={props.placeholder} rows={props.rows}\r\n          />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextArea;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SectionBox(props) {\r\n\r\n\treturn (\r\n\t\t<section className=\"SectionBox\">\r\n\t\t\t{props.children}\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default SectionBox;","import SectionBox from \"./SectionBox\";\r\nexport default SectionBox;","import React, { useState } from \"react\";\r\nimport TextArea from \"../../../inputs/TextArea/TextArea\";\r\nimport SectionBox from \"./../SectionBox\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction General(props) {\r\n\r\n  const shinobi = props.shinobi;\r\n\r\n  const [bio, setBio] = useState(shinobi._bio);\r\n\r\n  return (\r\n    <section className=\"General\">\r\n      <SectionBox>\r\n        \r\n        <TextArea\r\n          title=\"Apelido/titulo\"\r\n          id=\"ipt-name\"\r\n          placeholder=\"Relampago de Konoha\"\r\n          rows=\"3\"/>\r\n      </SectionBox>\r\n      <SectionBox>\r\n        <div className=\"physical\">\r\n          <p>FOR: {shinobi.FOR}</p>\r\n          <p>RES: {shinobi.RES}</p>\r\n          <p>AGL: {shinobi.AGL}</p>\r\n          <p>DEX: {shinobi.DEX}</p>\r\n        </div>\r\n        <div className=\"spirit\">\r\n          <p>INT: {shinobi.INT}</p>\r\n          <p>PER: {shinobi.PER}</p>\r\n          <p>CAR: {shinobi.CAR}</p>\r\n          <p>FOC: {shinobi.FOC}</p>\r\n        </div>\r\n      </SectionBox>\r\n      <SectionBox className=\"card\">\r\n        <h4>Bio</h4>\r\n        <textarea onChange={(event) => {\r\n          event.stopPropagation();\r\n          setBio(event.target.value);\r\n        }}\r\n          \r\n          defaultValue={bio}\r\n          name=\"bio\"\r\n          id=\"bio\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n        ></textarea>\r\n      </SectionBox>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default General;\r\n","import General from \"./General\";\r\nexport default General;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <nav className=\"Nav\">\r\n      <ul>\r\n        {props.pages.map((page, id) => {\r\n          return (\r\n            <li\r\n              key={id}\r\n              onClick={() => {\r\n                props.setter(id);\r\n              }}\r\n            >\r\n              {page}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import Nav from \"./Nav\";\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./../Header\";\r\nimport General from \"./components/General\";\r\nimport Nav from \"./components/Nav\";\r\nimport \"./style.css\";\r\n\r\nfunction ShinobiProfile(props) {\r\n  const [idx, setIdx] = useState(0);\r\n\r\n  const pages = [<General shinobi={props.shinobi} />, <p>cachaça</p>];\r\n\r\n  return (\r\n    <div className=\"ShinobiProfile\">\r\n    \r\n      <Header title={props.shinobi.fullName} activeReturn=\"true\" action={props.goToCharacterList}/>\r\n\r\n      {pages[idx]}\r\n      <Nav\r\n        pages={[\"General\", \"Status\", \"Techniques\", \"Inventory\"]}\r\n        setter={setIdx}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShinobiProfile;\r\n","import React, { useState } from \"react\";\r\n\r\nimport CharacterList from \"./components/CharacterList\";\r\nimport ShinobiProfile from \"./components/ShinobiProfile/ShinobiProfile\";\r\n\r\nimport ShinobiDAO from \"./js/ShinobiDAO\";\r\nimport shinobiController from \"./js/ShinobiController.js\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n\r\n  const [shinobi, setShinobi] = useState(ShinobiDAO.example());\r\n\r\n  function goToShinobiProfile(id) {\r\n  \tshinobiController\r\n  \t\t.get(id)\r\n  \t\t.then(res => {\r\n  \t\t\tsetShinobi(res);\r\n  \t\t\tsetPageIdx(1);\r\n  \t\t})\r\n  }\r\n\r\n  function goToCharacterList() {\r\n    setPageIdx(0);\r\n  }\r\n\r\n  const pages = [\r\n    <CharacterList goToShinobiProfile={goToShinobiProfile} addShinobi={shinobiController.add.bind(shinobiController)}/>,\r\n    <ShinobiProfile shinobi={shinobi} goToCharacterList={goToCharacterList} />\r\n  ]\r\n\r\n\r\n\r\n  const [pageIdx, setPageIdx] = useState(0);\r\n\r\n\r\n  return pages[pageIdx];\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}